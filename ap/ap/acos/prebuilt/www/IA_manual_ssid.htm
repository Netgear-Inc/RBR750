<html>
<head>
<%11%>
<title>NETGEAR Router <%12%></title>
<link rel="stylesheet" href="form.css">
<%14%>
<script language="javascript" type="text/javascript" src="repeater.js"></script>
<script language="javascript" type="text/javascript">
<!-- 
var showit = (document.layers) ? "show" : "visible";
var hideit = (document.layers) ? "hide" : "hidden";
var NS4 = (document.layers);

function setVisible(divID, setto)
{
    //alert(divID);
    //alert(setto);
	if (NS4)
		document.layers[divID].visibility = setto;
	else if (document.all)
		document.all(divID).style.visibility = setto;
	else if (document.getElementById)
		document.getElementById(divID).style.visibility = setto;
}

function setSecMode()
{
    cf = document.forms[0];
    //var security_type = cf.security_type.selectedIndex;
   //alert("IA_manual_ssid page setsecmode");
   document.forms[0].submit();   
   return true; 
}

function loadSettings()
{
    cf = document.forms[0];
    
    var security_type = cf.sec_type.value;
    
    //setVisible('basic', showit);
    //setVisible('wep', showit);
    //setVisible('wpa_wpa2', showit);

    if(security_type == "None") // None
    {
        setVisible('wpa_wpa2', hideit);
        setVisible('wep', hideit);
    }
    else if (security_type == "WEP") // WEP
    {
        setVisible('wpa_wpa2', hideit);
        setVisible('wep', showit);
    }
    else if (security_type == "WPA-PSK" || security_type == "WPA2-PSK" || security_type == "WPA-AUTO-PSK")
    {
        setVisible('wpa_wpa2', showit);
        setVisible('wep', hideit);
    }
}

function CheckData()
{
    var msg_key64_type = "Invalid Key.\n\nKeys length should be 10 Hex (0~9 and A~F) chars.";
    var msg_key128_type = "Invalid Key.\n\nKeys length should be 26 Hex (0~9 and A~F) chars.";

    var cf = document.forms[0];
    var security_type = cf.security_type.selectedIndex;    
    var msg = "";

    if (cf.ssid.value == "")
    {
        alert("SSID cannot be blank.");
        return false;
    }

    if (cf.ssid.value.match( /[^\x20-\x7E]/ ))
    {
        alert("Character is not allowed in SSID.");
        cf.ssid.focus();
        return false;
    }

    if (security_type == 1) // WEP
    {
        var blankFlag = false; var sizeOK = false; var i;
        var len = (cf.wepenc.selectedIndex==0)?10:((cf.wepenc.selectedIndex==1)?26:32);
    
        for (i = 1; i < 5; i++ )
        {
            msg = "";
            blankFlag = ! (eval("(cf.wep_key_no[" + (i-1) + "].checked)")); // default key
            if( (blankFlag) && (eval("(cf.KEY" + i + ".value.length == 0)")) )
                continue; // blank ok
            sizeOK = ((eval("isHex(cf.KEY" + i +".value)")) && (eval("(cf.KEY" + i + ".value.length == len)")));
            if (!sizeOK)
            {
                msg += (len == 10)?msg_key64_type:msg_key128_type;
                alertR(msg);
                if (i==1)
                    cf.KEY1.focus();
                else if (i==2)
                    cf.KEY2.focus();
                else if (i==3)
                    cf.KEY3.focus();
                else if (i==4)
                    cf.KEY4.focus();
                return false;
            }
        }
    }
    else if (security_type == 2 || security_type == 3 || security_type == 4) //WPA-PSK/WPA2-PSK
    {
        if(cf.passphrase.value.length < 8)
        {
            alert("Insufficient passphrase length. It should be a minimum of 8 characters long.");
            return false;    
        }
        if(cf.passphrase.value.length > 63)
        {
            if ( isHex(cf.passphrase.value) == false)
            {
                alert("The passphrase is too long. The maximum length is 63 characters.");
                cf.passphrase.value = "";
                return false;
            }    
        }
        
        if (cf.passphrase.value.match( /[^\x20-\x7E]/ ))
        {
            alert("Character is not allowed in passphrase.");
            cf.passphrase.focus();
            return false;
        }
    }    
    return true;
}

function keyCheck(fobj)
{
    lastObj = fobj;
    keyTooBig = (fobj.value.length >= keysize ) ? true : false;
}

function calcPassphrase(F)
{
    if(F.passphraseStr.value.length == 0)
        return;
    switch(F.wepenc.selectedIndex)
    {
        case 0:
            PassPhrase40(F);
            break;
        case 1:
            PassPhrase104(F);
            break;
        default:
            break;
    }
}

function PassPhrase40(F)
{
    var seed = 0;
    var pseed = new Array(0, 0, 0, 0);
    var pkey = new Array(4);
    var asciiObj = new Array(4);
    Length = F.passphraseStr.value.length;
    if(Length != 0)
    {
        for (i=0; i<Length; i++ )
            pseed[i%4] ^= F.passphraseStr.value.charCodeAt(i);
        seed = pseed[0];
        seed += pseed[1] << 8;
        seed += pseed[2] << 16;
        seed += pseed[3] << 24;
    }
    F.KEY1.value = F.KEY2.value = "";
    F.KEY3.value = F.KEY4.value = "";
    pkey[0] = F.KEY1;
    pkey[1] = F.KEY2;
    pkey[2] = F.KEY3;
    pkey[3] = F.KEY4;
    for(j=0; j<4; j++)
    {
        for (i=0; i<5 ;i++ )
        {
            seed = (214013 * seed) & 0xffffffff;
            if(seed & 0x80000000)
                seed = (seed & 0x7fffffff) + 0x80000000 + 0x269ec3;
            else
                seed = (seed & 0x7fffffff) + 0x269ec3;
            temp = ((seed >> 16) & 0xff);
            if(temp < 0x10)
                pkey[j].value += "0" + temp.toString(16).toUpperCase();
            else
                pkey[j].value += temp.toString(16).toUpperCase();
        }
    }
    F.wep_key_no[0].checked = true;
}

function PassPhrase104(F)
{
    var pseed2 = "";
    Length2 = F.passphraseStr.value.length;
    var asciiObj = "";
    for(p=0; p<64; p++)
    {
        tempCount = p % Length2;
        pseed2 += F.passphraseStr.value.substring(tempCount, tempCount+1);
    }
    md5Str = calcMD5(pseed2);
    F.KEY1.value = md5Str.substring(0, 26).toUpperCase();
    F.KEY2.value = F.KEY1.value;
    F.KEY3.value = F.KEY1.value;
    F.KEY4.value = F.KEY1.value;
    F.wep_key_no[0].checked = true;
    //F.KEY2.disabled = F.KEY3.disabled = F.KEY4.disabled = true;
}

function setKeys()
{
    var cf = document.forms[0];
    cf.passphraseStr.disabled = false;
    cf.KEY1.disabled = cf.KEY2.disabled = cf.KEY3.disabled = cf.KEY4.disabled = false;
    if (cf.wepenc.selectedIndex == 0)
    {
        cf.keygen.disabled = false;
        cf.passphraseStr.disabled = false;        
        keysize = 10;
        cf.KEY1.size = cf.KEY2.size = cf.KEY3.size = cf.KEY4.size = keysize + 2 ; // extra for Mac
        if (cf.KEY1.value.length>10)
            cf.KEY1.value = cf.KEY1.value.substring(0,10);
        if (cf.KEY2.value.length>10)
            cf.KEY2.value = cf.KEY2.value.substring(0,10);
        if (cf.KEY3.value.length>10)
            cf.KEY3.value = cf.KEY3.value.substring(0,10);
        if (cf.KEY4.value.length>10)
            cf.KEY4.value = cf.KEY4.value.substring(0,10);
    }
    else if(cf.wepenc.selectedIndex == 1)
    {
        cf.keygen.disabled = false;
        cf.passphraseStr.disabled = false;        
        keysize = 26;
        cf.KEY1.size = cf.KEY2.size = cf.KEY3.size = cf.KEY4.size = keysize + 2; // extra for Mac
        if (cf.KEY1.value.length>26)
            cf.KEY1.value = cf.KEY1.value.substring(0,26);
        if (cf.KEY2.value.length>26)
            cf.KEY2.value = cf.KEY2.value.substring(0,26);
        if (cf.KEY3.value.length>26)
            cf.KEY3.value = cf.KEY3.value.substring(0,26);
        if (cf.KEY4.value.length>26)
            cf.KEY4.value = cf.KEY4.value.substring(0,26);
    }
    else if(cf.wepenc.selectedIndex == 2)
    {
        cf.keygen.disabled = true;
        cf.passphraseStr.disabled = true;
        keysize = 32;
        cf.KEY1.size = cf.KEY2.size = cf.KEY3.size = cf.KEY4.size = keysize + 2; // extra for Mac
    }
    //auto_disable();
}
//-->
</script> 
</head>
<body bgcolor="#ffffff" onload="load_default(2);document.forms[0].elements[0].focus()">
<form method="POST" action="ia_manual_ssid.cgi">

<table border="0" cellpadding="0" cellspacing="3" width="100%">
<tr>
	<td colspan="2"><h1>Provide the Security Settings Your Wireless Network Requires.</h1></td>
</tr>
<tr>
    <td height=33%><img src="spacer.gif" width="25" height="10" border="0" alt=""></td>
</tr>
<tr> <!-- RULE -->
 <td colspan="2" height="12"><hr class='blueBar'></td>
</tr>
<tr>
  <td nowrap width="30%" align="left">Name(SSID):</td>
  <td nowrap width="80%" align="left"><input type="text" name="ssid" size="20" maxlength="32"></td>
</tr>

<tr>
  <td nowrap width="30%" align="left">Security:</td>
  <td nowrap width="70%" align="left">
    <select name="security_type" size=1 onchange="setSecMode();">
        <option <%2659%> value="0">None</option>
        <option <%2660%> value="1">WEP</option>
        <option <%2661%> value="2">WPA-PSK[TKIP]</option>
        <option <%2662%> value="3">WPA2-PSK[AES]</option>
        <option <%2663%> value="4">WPA-PSK[TKIP]+WPA2-PSK[AES]</option>
    </select>
  </td>
</tr>
</table>

<!------ WEP DIV Start ------>
<!--<div id="wep" style="position: relative; top: 0pt; left: 0pt; visibility: hidden;" align="center">-->
<%2664%>
	<table border="0" cellpadding="0" cellspacing="5" width="100%">
    <tr>
      <td colspan="2"><a href="javascript:loadhelp('WLG_wireless','wep')" tabindex="-1"><b>Security Encryption (WEP)</b></a></td></tr>
    <tr>
      <td nowrap>Encryption Strength:</td>
      <td><select name="wepenc" size=1 onchange="setKeys();"><option selected value="1">64bit</option><option value="2">128bit</option></select></td></tr>
    <tr>
      <td colspan="2" height="12"><hr class='blueBar'></td></tr>
    <tr>
      <td colspan="2"><a href="javascript:loadhelp('WLG_wireless','wepkey')" tabindex="-1"><b>Security Encryption (WEP) Key</b></a></td></tr>
    <tr>
      <td nowrap colspan="2">
        Passphrase: <input type="text" name="passphraseStr" size="14" maxlength="32" value=""> &nbsp;
        <input type="button" name="keygen" value="Generate" onClick="calcPassphrase(this.form)"></td></tr>
    <tr>
      <td colspan="2">
        <table>
          <tr>
            <td>Key 1:<input type="radio"  checked name="wep_key_no" value="1"></td>
            <td align=left><input type="text" name="KEY1" maxLength=32 size=34 value="" onkeydown="keyCheck(this)" onfocus="this.form.wep_key_no[0].checked=true;"></td></tr>
          <tr>
            <td>Key 2:<input type="radio" name="wep_key_no" value="2"></td>
            <td align=left><input type="text" name="KEY2" maxLength=32 size=34 value="" onkeydown="keyCheck(this)" onfocus="this.form.wep_key_no[1].checked=true;"></td></tr>
          <tr>
            <td>Key 3:<input type="radio" name="wep_key_no" value="3"></td>
            <td align=left><input type="text" name="KEY3" maxLength=32 size=34 value="" onkeydown="keyCheck(this)" onfocus="this.form.wep_key_no[2].checked=true;"></td></tr>
          <tr>
            <td>Key 4:<input type="radio" name="wep_key_no" value="4"></td>
            <td align=left><input type="text" name="KEY4" maxLength=32 size=34 value="" onkeydown="keyCheck(this)" onfocus="this.form.wep_key_no[3].checked=true;"></td></tr>
        </table>
      </td>
    </tr>
    </table>
<%2665%>
<!--</div>-->

<!------ WEP DIV End ------>
<!------ WPA2 DIV Start ------>
<!--<div id="wpa_wpa2" style="position: relative; top: 0pt; left: 0pt; visibility: hidden;" align="center">-->
<%2666%>
<table border="0" cellpadding="0" cellspacing="5" width="100%">
    <%2667%>
<tr>
      <td colspan="2" height="12"><hr class='blueBar'></td></tr>
    <tr>    
<tr>
  <td colspan="2">Passphrase: <input type="text" name="passphrase" size=20 maxLength=64 value=" ">&nbsp;&nbsp;(8-63 characters or 64 hex digits)</td></tr>
</table>
<%2668%>
<!--</div>-->
<!-----------WPA2 DIV End---------->
<table border="0" cellpadding="0" cellspacing="3" width="100%">
<tr>
    <td colspan="2" align="center">
    <td><input type="submit" name="back" value=" <Back" align="right"></td>
    <td><input type="submit" name="Next" value=" Continue" align="right" onclick="CheckData();" ></td>
    </td>    
</tr>

</table>

<input type="hidden" name="sec_type" value="<%2669%>">

</form>
<p>
</p>
</body>
</html>

